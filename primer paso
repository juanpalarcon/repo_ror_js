para comenzar una app con postgresql
rails new APP_NAME --database=postgresql
despues correr 
rails db:create
rails db:migrate
rails g scaffold Tag title
vamos hacer un tabla intermedia (relacions intransitivas)
rails g migration CreateJoinTable post tag
rails db:migrate
despues hacer las referencia

pra comprobar  la asociacion en rails console
Post.new.tags
(esto es una asocioacion N a N)
creamos un post en consola
article = Post.create(title:'awesome post', content:'A short story', author: 'Jp')
un nuevo tag
tag = Tag.new(title:'Food')
para hacer un asociacion 
article.tags << tag
con esto asociamos el post_id 1 con el tag_id 1


ahora vamos amodificar la tabla intermedia ejecutamos 
rails g migration ChangePostsTagsTable
rails db:migrate

creamos el modelo post_tag.rb para hacer las relaciones ocupamos 
belongs_to :post
belongs_to :tag
en consola verificamos si estan bien la relaciones 
Post.new.tags
Tag.new.posts 
si las relaciones estna bien veremos un mensaje como este :
 => #<ActiveRecord::Associations::CollectionProxy []> 

 para borrar una relacion en consola seria:
 p = Post.last
 p.tags.destroy_all
 se borra la relacion, pero siguien existiendo el tags

 Podemos comprobar contando la cantidad de tags
 p.tags.count

 el has many through es mas recomendable cuando implementamos un 
 logica de relacion con el modelo intermedio


 ** para relacion post con usuario se crea la migracion **
 rails g migration AddUserToPosts user:references

 agregamos controlador de post_tags
 rails g scaffold_controller PostTags


 agregamos devise


 para tener distintas vistas hacemos la migracion 
 rails g migration AddEditorToUsers editor:boolean
 rails db:migrate

 para autorizar al editor
 en tags 
  before_action :authorize_editor!
y luego creamos el metodo en el aplication_controller
no olvidar dar autorizacion al usuario por consola 




